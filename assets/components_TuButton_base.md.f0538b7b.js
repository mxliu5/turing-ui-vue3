import{_ as d,A as n,o as c,c as p,v as t,C as l,a as o,y as r,M as a}from"./chunks/framework.235dacfa.js";const O=JSON.parse('{"title":"按钮组件(内置防抖功能)","description":"","frontmatter":{},"headers":[],"relativePath":"components/TuButton/base.md","filePath":"components/TuButton/base.md"}'),u={name:"components/TuButton/base.md"},i=a(`<h1 id="按钮组件-内置防抖功能" tabindex="-1">按钮组件(内置防抖功能) <a class="header-anchor" href="#按钮组件-内置防抖功能" aria-label="Permalink to &quot;按钮组件(内置防抖功能)&quot;">​</a></h1><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>继承<code>el-button</code>所有属性、插槽、方法以及事件。所有写法一致 参考：<a href="https://element-plus.org/zh-CN/component/button.html" target="_blank" rel="noreferrer">el-button使用说明文档</a></p><p>:::demo TuButton/base :::</p><h3 id="防抖功能" tabindex="-1">防抖功能 <a class="header-anchor" href="#防抖功能" aria-label="Permalink to &quot;防抖功能&quot;">​</a></h3><p>在<code>time</code>时间之内，只能点击一次；默认值为1000ms</p><p>:::demo TuButton/time :::</p><h3 id="自定义按钮类型" tabindex="-1">自定义按钮类型 <a class="header-anchor" href="#自定义按钮类型" aria-label="Permalink to &quot;自定义按钮类型&quot;">​</a></h3><p>除了按钮自带的类型<code>success</code>、<code>primary</code>、<code>warning</code>、<code>danger</code>、<code>info</code>以外 还内置了几个常用的业务按钮类型：新增<code>add</code>、导入<code>import</code>、导出<code>export</code>、删除<code>delete</code></p><p>:::demo TuButton/custom-type :::</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>前提是必须在项目中全局引入了element-icon</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> ElementPlusIconsVue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@element-plus/icons-vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 注册所有elemement-icon</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">key</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> component</span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">of</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#BABED8;">(ElementPlusIconsVue)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">component</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">component</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><p>继承<code>el-button</code>所有插槽</p><p>:::demo TuButton/slot :::</p><h3 id="按钮组" tabindex="-1">按钮组 <a class="header-anchor" href="#按钮组" aria-label="Permalink to &quot;按钮组&quot;">​</a></h3><p>:::demo TuButton/group :::</p><h3 id="tooltipbutton" tabindex="-1">TooltipButton <a class="header-anchor" href="#tooltipbutton" aria-label="Permalink to &quot;TooltipButton&quot;">​</a></h3><p>不可点击的按钮，鼠标移入按钮展示tooltip提示信息，鼠标点击按钮弹出warning提示<br> 通过<code>tooltipButton</code>属性来设置是否为TooltipButton按钮 :::demo TuButton/tooltipButton :::</p><h3 id="button属性" tabindex="-1">Button属性 <a class="header-anchor" href="#button属性" aria-label="Permalink to &quot;Button属性&quot;">​</a></h3><p>继承<code>el-button</code>所有的属性，这里只列举常用属性以及新增属性</p>`,20),h=t("thead",null,[t("tr",null,[t("th",null,"属性名"),t("th",null,"说明"),t("th",null,"类型"),t("th",null,"默认值")])],-1),_=t("td",null,"type",-1),b=t("td",null,"按钮类型",-1),m=t("code",null,"enum",-1),y=t("td",null,'"default"',-1),B=t("tr",null,[t("td",null,"isDebounce"),t("td",null,"是否开启防抖"),t("td",null,[t("code",null,"boolean")]),t("td",null,"true")],-1),D=t("tr",null,[t("td",null,"time"),t("td",null,"防抖时间（一定时间内按钮仅触发一次，防止多次触发）"),t("td",null,[t("code",null,"number")]),t("td",null,"0(单位ms)")],-1),F=t("td",null,"tooltipButton",-1),f=t("td",null,"是否为tooltipButton类型的按钮",-1),A=t("code",null,"object",-1),E=t("td",null,"-",-1),T=a('<h4 id="tooltipbutton属性" tabindex="-1">tooltipButton属性 <a class="header-anchor" href="#tooltipbutton属性" aria-label="Permalink to &quot;tooltipButton属性&quot;">​</a></h4><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>clickable</td><td>是否可直接点击</td><td><code>boolean</code></td><td>true</td></tr><tr><td>handle</td><td>按钮操作名称</td><td><code>string</code></td><td>&#39;操作&#39;</td></tr><tr><td>tips</td><td>自定义提示内容</td><td><code>string</code></td><td>&#39; &#39;</td></tr><tr><td>tooltip</td><td>tooltip的相关属性</td><td><code>object</code></td><td>参考el-tooltip文档</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">提示</p><p>默认提示信息为“请选择要{handle}的数据”<br> 若想要自定义提示信息，通过传参tips来自定义</p></div><h3 id="button插槽" tabindex="-1">Button插槽 <a class="header-anchor" href="#button插槽" aria-label="Permalink to &quot;Button插槽&quot;">​</a></h3><p>继承<code>el-button</code>所有的插槽</p><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义默认内容</td></tr><tr><td>loading</td><td>自定义加载中组件</td></tr><tr><td>icon</td><td>自定义图标组件</td></tr></tbody></table><h3 id="button-expose" tabindex="-1">Button Expose <a class="header-anchor" href="#button-expose" aria-label="Permalink to &quot;Button Expose&quot;">​</a></h3><p>继承<code>el-button</code>所有的Expose</p>',8),k=t("thead",null,[t("tr",null,[t("th",null,"插槽名"),t("th",null,"说明")])],-1),x=t("tr",null,[t("td",null,"ref"),t("td",null,"按钮 html 元素")],-1),q=t("tr",null,[t("td",null,"size"),t("td",null,"按钮尺寸")],-1),g=t("tr",null,[t("td",null,"type"),t("td",null,"按钮类型")],-1),P=t("tr",null,[t("td",null,"disabled"),t("td",null,"按钮已禁用")],-1),v=t("tr",null,[t("td",null,"shouldAddSpace"),t("td",null,"是否在两个字符之间插入空格")],-1),C=t("td",null,"el-button元素，可通过$ref获取el-button的所有属性",-1),N=t("div",{class:"tip custom-block"},[t("p",{class:"custom-block-title"},"特别说明："),t("p",null,[o("另外"),t("code",null,"tu-button"),o("解决了"),t("code",null,"el-button"),o("点击完按钮后，背景颜色未恢复，仍然处于聚焦的状态。"),t("code",null,"tu-button"),o("点击完按钮取消聚焦状态，从而背景颜色恢复正常状态")])],-1);function V(S,I,$,j,w,R){const e=n("tu-tooltip"),s=n("el-tag");return c(),p("div",null,[i,t("table",null,[h,t("tbody",null,[t("tr",null,[_,b,t("td",null,[m,l(e,{content:"继承el-tooltip所有类型</br>新增定义类型：'add'、'import'、'export'、'delete'"})]),y]),B,D,t("tr",null,[F,f,t("td",null,[A,l(e,{content:"具体取值见下方tooltipButton属性"})]),E])])]),T,t("table",null,[k,t("tbody",null,[x,q,g,P,v,t("tr",null,[t("td",null,[o("$refs"),l(s,{style:{"margin-left":"12px"},effect:"plain",round:""},{default:r(()=>[o("新增")]),_:1})]),C])])]),N])}const G=d(u,[["render",V]]);export{O as __pageData,G as default};
