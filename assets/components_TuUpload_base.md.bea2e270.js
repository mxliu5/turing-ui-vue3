import{_ as o,A as n,o as d,c as s,v as t,a as e,C as a,M as i}from"./chunks/framework.235dacfa.js";const J=JSON.parse('{"title":"上传组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/TuUpload/base.md","filePath":"components/TuUpload/base.md"}'),c={name:"components/TuUpload/base.md"},r=i('<h1 id="上传组件" tabindex="-1">上传组件 <a class="header-anchor" href="#上传组件" aria-label="Permalink to &quot;上传组件&quot;">​</a></h1><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>继承<code>el-upload</code>所有属性、插槽、方法以及事件，所有写法一致。 参考：<a href="https://element-plus.org/zh-CN/component/upload.html" target="_blank" rel="noreferrer">el-upload使用说明文档</a></p><p>:::demo TuUpload/base :::</p><h3 id="自定义上传" tabindex="-1">自定义上传 <a class="header-anchor" href="#自定义上传" aria-label="Permalink to &quot;自定义上传&quot;">​</a></h3><p>新增<code>customRequest</code>属性，默认值为false，若设置为true,则会覆盖默认的xhr行为，走<code>http-request</code>的自定义上传。通过<code>v-model</code>或者<code>change</code>事件获取选中的文件；</p><div class="info custom-block"><p class="custom-block-title">功能清单：</p><ol><li>1.自定义上传实现了文件类型<code>accept</code>和文件大小<code>maxSize</code>的限制。</li><li>2.可以通过默认插槽自定义上传按钮，如果默认插槽无值，则显示默认上传按钮</li><li>3.默认提示内容为文件类型和文件大小限制的相关提示内容，如果accept和maxSize都未传值，则默认没有tip文本</li><li>4.可以通过<code>uploadTip</code>属性自定义提示文本</li><li>5.可以通过<code>tip插槽</code>自定义提示内容，下载按钮在提示插槽中实现</li><li>6.可以通过v-model=&quot;file&quot;获取文件的值，可通过v-model实现form表单验证</li></ol></div><p>:::demo TuUpload/custom :::</p><h3 id="支持拖拽" tabindex="-1">支持拖拽 <a class="header-anchor" href="#支持拖拽" aria-label="Permalink to &quot;支持拖拽&quot;">​</a></h3><p>通过<code>drag</code>属性设置支持拖拽，将文件拖拽到上传按钮区域。可通过默认插槽自定义拖拽交互内容。</p><p>:::demo TuUpload/customDrag :::</p><h3 id="支持拖拽-拖拽风格" tabindex="-1">支持拖拽（拖拽风格） <a class="header-anchor" href="#支持拖拽-拖拽风格" aria-label="Permalink to &quot;支持拖拽（拖拽风格）&quot;">​</a></h3><p>通过<code>drag</code>属性设置支持拖拽，通过<code>dragStyle</code>属性设置为拖拽风格的上传区域。可通过默认插槽自定义拖拽交互内容。</p><p>:::demo TuUpload/dragStyle :::</p><h3 id="自定义拖拽交互" tabindex="-1">自定义拖拽交互 <a class="header-anchor" href="#自定义拖拽交互" aria-label="Permalink to &quot;自定义拖拽交互&quot;">​</a></h3><p>可以通过默认插槽自定义拖拽的区域的交互 :::demo TuUpload/dragStyleCustom :::</p><h3 id="支持模板下载" tabindex="-1">支持模板下载 <a class="header-anchor" href="#支持模板下载" aria-label="Permalink to &quot;支持模板下载&quot;">​</a></h3><p>新增<code>downloadTemplate</code>方法，支持下载模板，下载模板的方法由父组件实现</p><p>:::demo TuUpload/downTemplate :::</p><h3 id="大文件分片上传、断点续传" tabindex="-1">大文件分片上传、断点续传 <a class="header-anchor" href="#大文件分片上传、断点续传" aria-label="Permalink to &quot;大文件分片上传、断点续传&quot;">​</a></h3><p>新增<code>is-chunk</code>方法，是否为分片上传</p><p>:::demo TuUpload/ChunkUpload :::</p><div class="info custom-block"><p class="custom-block-title">接口说明</p><p>要实现大文件分片上传、断点续传，需要后端提供以下接口：</p><ol><li>1.分片上传的接口<br> 入参：<br> 1）file：当前上传的文件<br> 2）md5：当前上传的文件md5值<br> 3）chunkIndex：当前上传的分片文件下标<br> 4）chunks：当前文件分片集合<br> 返参：<br> 1）chunkIndex：当前上传成功的分片下标</li><li>2.获取当前文件已上传的分片信息接口（实现断点续传）<br> 1）md5：当前上传的文件md5值<br> 2）receivedChunks：当前文件已上传的分片部分</li></ol></div><h3 id="tupload-attributes" tabindex="-1">TUpload Attributes <a class="header-anchor" href="#tupload-attributes" aria-label="Permalink to &quot;TUpload Attributes&quot;">​</a></h3><h3 id="配置参数-attributes" tabindex="-1">配置参数（Attributes） <a class="header-anchor" href="#配置参数-attributes" aria-label="Permalink to &quot;配置参数（Attributes）&quot;">​</a></h3><p>继承 el-upload 所有属性 详情见 <a href="https://element-plus.gitee.io/zh-CN/component/upload.html" target="_blank" rel="noreferrer">https://element-plus.gitee.io/zh-CN/component/upload.html</a> （这里只列举差异部分）</p>',26),u=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"参数"),t("th",{style:{"text-align":"left"}},"说明"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"默认值")])],-1),h=t("tr",null,[t("td",{style:{"text-align":"left"}},"customRequest"),t("td",{style:{"text-align":"left"}},[e("是否自定义上传,如果为false，所有用法同参考："),t("a",{href:"https://element-plus.org/zh-CN/component/upload.html",target:"_blank",rel:"noreferrer"},"el-upload")]),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},"false")],-1),f=t("tr",null,[t("td",{style:{"text-align":"left"}},"v-model"),t("td",{style:{"text-align":"left"}},"当前选中的文件"),t("td",{style:{"text-align":"left"}},[t("code",null,"object")]),t("td",{style:{"text-align":"left"}},"-")],-1),p=t("tr",null,[t("td",{style:{"text-align":"left"}},"multiple"),t("td",{style:{"text-align":"left"}},"是否支持多选"),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},"false")],-1),x=t("td",{style:{"text-align":"left"}},"accept",-1),g=t("td",{style:{"text-align":"left"}},"支持的文件类型",-1),_={style:{"text-align":"left"}},m=t("code",null,"string",-1),y=t("td",{style:{"text-align":"left"}},"-",-1),b=t("tr",null,[t("td",{style:{"text-align":"left"}},"drag"),t("td",{style:{"text-align":"left"}},"是否支持拖拽功能"),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},"false")],-1),k=t("tr",null,[t("td",{style:{"text-align":"left"}},"dragStyle"),t("td",{style:{"text-align":"left"}},"是否为拖拽风格"),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},"false")],-1),q=t("td",{style:{"text-align":"left"}},"maxSize",-1),T=t("td",{style:{"text-align":"left"}},"单个文件最大值",-1),v={style:{"text-align":"left"}},P=t("code",null,"string",-1),C=t("td",{style:{"text-align":"left"}},"-",-1),U=t("tr",null,[t("td",{style:{"text-align":"left"}},"uploadTip"),t("td",{style:{"text-align":"left"}},"文件上传的提示"),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"-")],-1),S=t("tr",null,[t("td",{style:{"text-align":"left"}},"downTemplate"),t("td",{style:{"text-align":"left"}},"是否支持模板下载"),t("td",{style:{"text-align":"left"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"left"}},"-")],-1),N=t("tr",null,[t("td",{style:{"text-align":"left"}},"is-chunk"),t("td",{style:{"text-align":"left"}},"是否为分片上传"),t("td",{style:{"text-align":"left"}},[t("code",null,"boolean")]),t("td",{style:{"text-align":"left"}},"false")],-1),A=t("tr",null,[t("td",{style:{"text-align":"left"}},"chunk-max"),t("td",{style:{"text-align":"left"}},"单个分片的大小（单位为M）"),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},"2")],-1),F=t("tr",null,[t("td",{style:{"text-align":"left"}},"upload-func"),t("td",{style:{"text-align":"left"}},"分片上传的接口"),t("td",{style:{"text-align":"left"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"left"}})],-1),z=t("tr",null,[t("td",{style:{"text-align":"left"}},"upload-func-transform"),t("td",{style:{"text-align":"left"}},"分片上传成功后的处理函数"),t("td",{style:{"text-align":"left"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"left"}},"-")],-1),B=t("tr",null,[t("td",{style:{"text-align":"left"}},"received-chunk-fun"),t("td",{style:{"text-align":"left"}},"获取当前文件上一次上传成功的分片信息接口"),t("td",{style:{"text-align":"left"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"left"}},"-")],-1),V=t("tr",null,[t("td",{style:{"text-align":"left"}},"received-chunk-params"),t("td",{style:{"text-align":"left"}},"receivedChunkFun的参数"),t("td",{style:{"text-align":"left"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"left"}},"-")],-1),I=t("tr",null,[t("td",{style:{"text-align":"left"}},"received-chunk-transform"),t("td",{style:{"text-align":"left"}},"receivedChunkFun成功后的处理函数"),t("td",{style:{"text-align":"left"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"left"}},"-")],-1),M=t("p",null,[t("code",null,"upload-func"),e(" 默认参数格式为"),t("code",null,"{file:'', filename: '',md5: '', chunkIndex: '', chunks: ''}"),e(" 根据实际业务接口按需转换成需要的格式，详见示例")],-1);function $(w,D,R,E,G,K){const l=n("tu-tooltip");return d(),s("div",null,[r,t("table",null,[u,t("tbody",null,[h,f,p,t("tr",null,[x,g,t("td",_,[m,e(),a(l,{content:"例：'.csv,.xslx,.docx'"})]),y]),b,k,t("tr",null,[q,T,t("td",v,[P,e(),a(l,{content:"单位：G/g/GB/gb、M/m/MB/mb、K/k/KB/kb、B/b"})]),C]),U,S,N,A,F,z,B,V,I])]),M])}const O=o(c,[["render",$]]);export{J as __pageData,O as default};
