import{_ as a,A as l,o as d,c as r,v as t,a as o,C as n,y as i,M as p}from"./chunks/framework.235dacfa.js";const k=JSON.parse('{"title":"Tooltip 文字提示","description":"","frontmatter":{},"headers":[],"relativePath":"components/TuTooltip/base.md","filePath":"components/TuTooltip/base.md"}'),h={name:"components/TuTooltip/base.md"},c=p('<h1 id="tooltip-文字提示" tabindex="-1">Tooltip 文字提示 <a class="header-anchor" href="#tooltip-文字提示" aria-label="Permalink to &quot;Tooltip 文字提示&quot;">​</a></h1><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>继承<code>el-tooltip</code>所有属性、插槽、方法以及事件。所有写法一致 参考：<a href="https://element-plus.org/zh-CN/component/tooltip.html" target="_blank" rel="noreferrer">el-tooltip使用说明文档</a></p><p>:::demo TuTooltip/base :::</p><h3 id="如果不传默认插槽-则为提示图标。通常用于对项目的一些难理解的文字进行解释说明" tabindex="-1">如果不传默认插槽，则为提示图标。通常用于对项目的一些难理解的文字进行解释说明 <a class="header-anchor" href="#如果不传默认插槽-则为提示图标。通常用于对项目的一些难理解的文字进行解释说明" aria-label="Permalink to &quot;如果不传默认插槽，则为提示图标。通常用于对项目的一些难理解的文字进行解释说明&quot;">​</a></h3><p>如果想要自定义提示图标，可以通过默认插槽自定义图标 :::demo TuTooltip/help :::</p><h3 id="content支持插槽自定义内容-也支持直接传参-并且支持传html格式的字符串" tabindex="-1">content支持插槽自定义内容，也支持直接传参，并且支持传html格式的字符串 <a class="header-anchor" href="#content支持插槽自定义内容-也支持直接传参-并且支持传html格式的字符串" aria-label="Permalink to &quot;content支持插槽自定义内容，也支持直接传参，并且支持传html格式的字符串&quot;">​</a></h3><p>:::demo TuTooltip/content :::</p><h3 id="tooltip-属性" tabindex="-1">Tooltip 属性 <a class="header-anchor" href="#tooltip-属性" aria-label="Permalink to &quot;Tooltip 属性&quot;">​</a></h3><p>继承<code>el-tooltip</code>所有的属性，这里只列举常用属性以及新增属性</p><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>content</td><td>显示的内容，也可被 slot#content 覆盖，支持html格式文本</td><td><code>string</code></td><td>-</td></tr><tr><td>maxWidth</td><td>tooltip提示框的最大宽度</td><td><code>string</code></td><td>&#39;380px&#39;</td></tr><tr><td>direction</td><td>提示图标位于需要添加提示图标元素的的位置，取值有&#39;left&#39;、&#39;right&#39;(如果不传默认插槽，默认展示提示图标)</td><td><code>string</code></td><td>&#39;right&#39;</td></tr><tr><td>infoStyle</td><td>提示图标的样式设置</td><td><code>object</code></td><td>当做字体设置即可</td></tr></tbody></table><h3 id="tooltip-插槽" tabindex="-1">Tooltip 插槽 <a class="header-anchor" href="#tooltip-插槽" aria-label="Permalink to &quot;Tooltip 插槽&quot;">​</a></h3><p>继承<code>el-tooltip</code>所有的插槽</p><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认插槽，Tooltip 触发 &amp; 引用的元素。如果不传，则默认显示提示图标</td></tr><tr><td>content</td><td>自定义tooltip显示内容</td></tr></tbody></table><h3 id="tooltip-expose" tabindex="-1">Tooltip Expose <a class="header-anchor" href="#tooltip-expose" aria-label="Permalink to &quot;Tooltip Expose&quot;">​</a></h3><p>继承<code>el-tooltip</code>所有的Expose，这里不就一一列举，可参考：<a href="https://element-plus.org/zh-CN/component/tooltip.html" target="_blank" rel="noreferrer">el-tooltip使用说明文档</a></p>',16),s=t("thead",null,[t("tr",null,[t("th",null,"插槽名"),t("th",null,"说明")])],-1),u=t("td",null,"el-tooltip元素，可通过$ref获取el-tooltip的所有属性",-1);function m(_,b,T,f,x,q){const e=l("el-tag");return d(),r("div",null,[c,t("table",null,[s,t("tbody",null,[t("tr",null,[t("td",null,[o("$refs"),n(e,{style:{"margin-left":"12px"},effect:"plain",round:""},{default:i(()=>[o("新增")]),_:1})]),u])])])])}const P=a(h,[["render",m]]);export{k as __pageData,P as default};
